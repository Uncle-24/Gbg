#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SulpHur")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertResults(Results instance);
    partial void UpdateResults(Results instance);
    partial void DeleteResults(Results instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ConsoleApplication1.Properties.Settings.Default.SulpHurConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Results> Results
		{
			get
			{
				return this.GetTable<Results>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Results")]
	public partial class Results : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResultID;
		
		private int _ContentID;
		
		private System.Xml.Linq.XElement _RelatedControls;
		
		private int _RuleID;
		
		private string _ResultType;
		
		private System.Data.Linq.Binary _ResultImage;
		
		private string _ResultLog;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<int> _ReviewFlag;
		
		private string _ReviewLog;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResultIDChanging(int value);
    partial void OnResultIDChanged();
    partial void OnContentIDChanging(int value);
    partial void OnContentIDChanged();
    partial void OnRelatedControlsChanging(System.Xml.Linq.XElement value);
    partial void OnRelatedControlsChanged();
    partial void OnRuleIDChanging(int value);
    partial void OnRuleIDChanged();
    partial void OnResultTypeChanging(string value);
    partial void OnResultTypeChanged();
    partial void OnResultImageChanging(System.Data.Linq.Binary value);
    partial void OnResultImageChanged();
    partial void OnResultLogChanging(string value);
    partial void OnResultLogChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnReviewFlagChanging(System.Nullable<int> value);
    partial void OnReviewFlagChanged();
    partial void OnReviewLogChanging(string value);
    partial void OnReviewLogChanged();
    #endregion
		
		public Results()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResultID
		{
			get
			{
				return this._ResultID;
			}
			set
			{
				if ((this._ResultID != value))
				{
					this.OnResultIDChanging(value);
					this.SendPropertyChanging();
					this._ResultID = value;
					this.SendPropertyChanged("ResultID");
					this.OnResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentID", DbType="Int NOT NULL")]
		public int ContentID
		{
			get
			{
				return this._ContentID;
			}
			set
			{
				if ((this._ContentID != value))
				{
					this.OnContentIDChanging(value);
					this.SendPropertyChanging();
					this._ContentID = value;
					this.SendPropertyChanged("ContentID");
					this.OnContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedControls", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement RelatedControls
		{
			get
			{
				return this._RelatedControls;
			}
			set
			{
				if ((this._RelatedControls != value))
				{
					this.OnRelatedControlsChanging(value);
					this.SendPropertyChanging();
					this._RelatedControls = value;
					this.SendPropertyChanged("RelatedControls");
					this.OnRelatedControlsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleID", DbType="Int NOT NULL")]
		public int RuleID
		{
			get
			{
				return this._RuleID;
			}
			set
			{
				if ((this._RuleID != value))
				{
					this.OnRuleIDChanging(value);
					this.SendPropertyChanging();
					this._RuleID = value;
					this.SendPropertyChanged("RuleID");
					this.OnRuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ResultImage
		{
			get
			{
				return this._ResultImage;
			}
			set
			{
				if ((this._ResultImage != value))
				{
					this.OnResultImageChanging(value);
					this.SendPropertyChanging();
					this._ResultImage = value;
					this.SendPropertyChanged("ResultImage");
					this.OnResultImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultLog", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ResultLog
		{
			get
			{
				return this._ResultLog;
			}
			set
			{
				if ((this._ResultLog != value))
				{
					this.OnResultLogChanging(value);
					this.SendPropertyChanging();
					this._ResultLog = value;
					this.SendPropertyChanged("ResultLog");
					this.OnResultLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewFlag", DbType="Int")]
		public System.Nullable<int> ReviewFlag
		{
			get
			{
				return this._ReviewFlag;
			}
			set
			{
				if ((this._ReviewFlag != value))
				{
					this.OnReviewFlagChanging(value);
					this.SendPropertyChanging();
					this._ReviewFlag = value;
					this.SendPropertyChanged("ReviewFlag");
					this.OnReviewFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewLog", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReviewLog
		{
			get
			{
				return this._ReviewLog;
			}
			set
			{
				if ((this._ReviewLog != value))
				{
					this.OnReviewLogChanging(value);
					this.SendPropertyChanging();
					this._ReviewLog = value;
					this.SendPropertyChanged("ReviewLog");
					this.OnReviewLogChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
